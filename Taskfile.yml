# Copyright (C) Damien Dart, <damiendart@pobox.com>.
# This file is distributed under the MIT licence. For more information,
# please refer to the accompanying "LICENCE" file.
---

version: '3'

output: 'prefixed'

vars:
  GO_PACKAGES:
    sh: 'go list ./...'

tasks:
  default:
    deps:
      - task: 'ci'

  ci:
    cmds:
      - task: 'clean'
      - task: 'dependencies'
      - task: 'lint'
      - task: 'test'
      - task: 'build'
    desc: 'Run all CI-related tasks'

  clean:
    cmds:
      - 'rm -fr .task cmd/visref/resources/assets/*.{css,js} visref node_modules'
      - 'go clean -testcache'
    desc: 'Delete all buildable files, caches, and third-party dependencies'

  build:
    cmds:
      - task: 'build:go'
    desc: 'Build the "visref" application'

  build-slim:
    cmds:
      - task: 'build:go-slim'
    desc: 'Build the "visref" application'

  # While Task provides functionality that runs tasks when files
  # changes, it's a little basic and slow to react to file changes. For
  # more information about entr, see <http://eradman.com/entrproject/>.
  build-watch:
    cmds:
      - cmd: 'command -v entr || (echo "\"entr\" is required."; exit 1)'
        silent: true
      - 'while sleep 0.1; do find cmd/ internal/ | entr -d task build && break; done'
    desc: 'Runs entr to execute the "build" task on file changes'

  build:css:
    cmds:
      - 'node_modules/.bin/sass --no-source-map {{ .INPUT_ENTRYPOINT }} {{ .OUTPUT_FILE }}'
      - 'node_modules/.bin/lightningcss --minify --targets ">= 0.25%" {{ .OUTPUT_FILE }} -o {{ .OUTPUT_FILE }}'
    desc: 'Build CSS files with Sass and friends'
    sources:
      - 'cmd/visref/resources/sass/**/*.scss'
    vars:
      INPUT_ENTRYPOINT: 'cmd/visref/resources/sass/app.scss'
      OUTPUT_FILE: 'cmd/visref/resources/assets/style.css'

  build:javascript:
    cmds:
      - 'node_modules/.bin/esbuild {{ .INPUT_ENTRYPOINT }} --bundle --log-level=warning --minify --outfile={{ .OUTPUT_FILE }}'
    desc: 'Build JavaScript files with esbuild'
    sources:
      - 'cmd/visref/resources/javascript/**/*.js'
    vars:
      INPUT_ENTRYPOINT: 'cmd/visref/resources/javascript/app.js'
      OUTPUT_FILE: 'cmd/visref/resources/assets/app.js'

  build:go: &build-go
    cmds:
      - 'go build ./cmd/visref'
    deps:
      - 'build:css'
      - 'build:javascript'
    desc: 'Build the "visref" application'
    env:
      CGO_ENABLED: '1'
    sources:
      - '**/*.go'
      - '**/*.gohtml'
      - '**/*.sql'
      - 'go.mod'
      - 'go.sum'
      - 'cmd/visref/resources/assets/*'

  build:go-slim:
    <<: *build-go
    cmds:
      - 'go build -ldflags "-s -w" -trimpath ./cmd/visref'

  dependencies:
    cmds:
      - task: 'dependencies:javascript'
    desc: 'Run third-party-dependency-installing-related tasks'

  dependencies:javascript:
    cmds:
      # <http://www.tiernok.com/posts/2019/faster-npm-installs-during-ci/>
      - 'npm ci --prefer-offline --no-audit'
    env:
      CI: true
    desc: 'Install JavaScript dependencies'

  lint:
    cmds:
      - task: 'lint:golint'
      - task: 'lint:staticcheck'
      - task: 'lint:vet'
    desc: 'Run all linting-related tasks'

  lint:golint:
    cmds:
      - 'golint -set_exit_status {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Golint'

  lint:staticcheck:
    cmds:
      - 'staticcheck {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Staticcheck'

  lint:vet:
    cmds:
      - 'go vet {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Vet'

  test:
    cmds:
      - 'go test {{catLines .GO_PACKAGES}}'
    desc: 'Run all tests'
