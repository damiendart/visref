# Copyright (C) Damien Dart, <damiendart@pobox.com>.
# This file is distributed under the MIT licence. For more information,
# please refer to the accompanying "LICENCE" file.
---

version: '3'

output: 'prefixed'

vars:
  GO_PACKAGES:
    sh: 'go list ./...'

tasks:
  default:
    deps:
      - task: 'ci'

  ci:
    cmds:
      - task: 'clean'
      - task: 'dependencies'
      - task: 'lint'
      - task: 'test'
      - task: 'build'
    desc: 'Run all CI-related tasks'

  clean:
    cmds:
      - 'rm -fr .task visref node_modules'
      - "find resources/assets -mindepth 1 ! -name '*.svg' -delete"
    desc: 'Delete all buildable files, caches, and third-party dependencies'

  build:
    cmds:
      - task: 'build:go'

  build:css:
    cmds:
      - 'node_modules/.bin/sass --no-source-map resources/sass/app.scss {{ .OUTPUT_FILE }}'
      - 'node_modules/.bin/lightningcss --minify --targets ">= 0.25%" {{ .OUTPUT_FILE }} -o {{ .OUTPUT_FILE }}'
    desc: 'Build CSS files with Sass and friends'
    sources:
      - 'resources/sass/**/*.scss'
    vars:
      OUTPUT_FILE: 'resources/assets/style.css'

  build:javascript:
    cmds:
      - 'node_modules/.bin/esbuild resources/javascript/app.js --bundle --log-level=warning --minify --outfile={{ .OUTPUT_FILE }}'
    desc: 'Build JavaScript files with esbuild'
    sources:
      - 'resources/javascript/**/*.js'
    vars:
      OUTPUT_FILE: 'resources/assets/app.js'

  build:go:
    cmds:
      - 'go build ./cmd/visref'
    deps:
      - 'build:css'
      - 'build:javascript'
    desc: 'Build the "visref" application'
    sources:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'

  dependencies:
    cmds:
      - task: 'dependencies:javascript'
    desc: 'Run third-party-dependency-installing-related tasks'

  dependencies:javascript:
    cmds:
      # <http://www.tiernok.com/posts/2019/faster-npm-installs-during-ci/>
      - 'npm ci --prefer-offline --no-audit'
    env:
      CI: true
    desc: 'Install JavaScript dependencies'

  lint:
    cmds:
      - task: 'lint:golint'
      - task: 'lint:staticcheck'
      - task: 'lint:vet'
    desc: 'Run all linting-related tasks'

  lint:golint:
    cmds:
      - 'golint -set_exit_status {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Golint'

  lint:staticcheck:
    cmds:
      - 'staticcheck {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Staticcheck'

  lint:vet:
    cmds:
      - 'go vet {{catLines .GO_PACKAGES}}'
    desc: 'Lint Go files with Vet'

  test:
    cmds:
      - 'go test {{catLines .GO_PACKAGES}}'
    desc: 'Run all tests'
